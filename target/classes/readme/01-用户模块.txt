一、用户登录
    后端实现：
        整体思路：
            1、参数判断
                用户姓名  非空判断
                用户密码  非空判断
            2、通过用户名查询数据库中用户的记录，返回用户对象
            3、判断用户对象是否为空
            4、如果用户对象不为空，则将前台传递的用户密码和数据库中的密码进行比较
            5、判断密码是否正确
            6、如果密码正确，则登录成功，返回结果

        controller层  控制层，接收前端页面发送过来的请求，并给页面响应结果数据
            1.通过形参接收前端页面传递过来的参数
            2.调用业务逻辑层(service层)的登录方法，得到登录结果
            3.响应数据给客户端

        service层  业务逻辑层：非空判断，条件判断等业务逻辑处理
            1.参数判断，判断用户姓名，用户密码是否为空
                如果参数为空，抛出异常（异常被控制层捕获并处理）
            2.调用数据访问层，通过用户名记录，返回用户对象
            3.判断用户对象是否为空
                如果用户对象为空，抛出异常（异常被控制层捕获并处理）
            4.判断密码是否正确，比较客户端传递的密码与数据库中用户的密码是否能够匹配
                如果密码不正确，抛出异常（异常被控制层捕获并处理）
            5.如果密码正确，登录成功


        dao层  数据访问层，数据库中增删改查操作
            通过用户名查询用户记录，返回用户对象


二：修改密码
    后端实现：
        controller层
            1.通过形参接收来自前端的参数（原始密码，新密码，确认密码）
            2.通过request对象，获取设置在cookie中的用户Id
            3.调用service层修改密码的功能，得到ResultInfo对象
            4.返回resultInfo对象

        service层
            1.接收来自控制层的参数（用户ID，原始密码，新密码，确认密码）
            2.通过用户ID查询用户对象，并判断用户是否存在
            3.参数校验：
                判断用户是否存在
                判断原始密码是否为空
                判断原始密码是否正确（查询用户对象中的密码是否与原始密码一致）
                判断新密码是否为空
                判断新密码是否与原始密码一致
                判断确认密码是否为空
                判断新密码是否与确认密码一致
            4.设置用户的新密码
                需要将新密码通过制定的算法进行加密(md5)
            5.执行更新的操作，判断受影响的行数

        dao层
            根据用户id修改用户的密码










